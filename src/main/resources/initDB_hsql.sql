DROP TABLE votes
IF EXISTS;
DROP TABLE dishes
IF EXISTS;
DROP TABLE menus
IF EXISTS;
DROP TABLE restaurants
IF EXISTS;
DROP TABLE user_roles
IF EXISTS;
DROP TABLE users
IF EXISTS;
DROP SEQUENCE global_seq
IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ
  AS INTEGER
  START WITH 100000;

CREATE TABLE restaurants
(
  id    INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  title VARCHAR(255) NOT NULL
  --     votes INTEGER      NOT NULL
);

CREATE TABLE menus
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  title         VARCHAR(255) NOT NULL,
  date_time     TIMESTAMP    NOT NULL,
  restaurant_id INTEGER      NOT NULL,
  FOREIGN KEY (restaurant_id) REFERENCES restaurants (id)
    ON DELETE CASCADE
);

CREATE TABLE dishes
(
  id          INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  description VARCHAR(255) NOT NULL,
  price       INTEGER      NOT NULL,
  menu_id     INTEGER      NOT NULL,
  FOREIGN KEY (menu_id) REFERENCES menus (id)
    ON DELETE CASCADE
);

CREATE TABLE users
(
  id         INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name       VARCHAR(255)            NOT NULL,
  email      VARCHAR(255)            NOT NULL,
  password   VARCHAR(255)            NOT NULL,
  registered TIMESTAMP DEFAULT now() NOT NULL,
  enabled    BOOLEAN DEFAULT TRUE    NOT NULL
);
CREATE UNIQUE INDEX users_unique_email_idx ON users (email);

CREATE TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES users (id)
    ON DELETE CASCADE
);

CREATE TABLE votes
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  date_time     TIMESTAMP NOT NULL,
  user_id       INTEGER   NOT NULL,
  restaurant_id INTEGER   NOT NULL,
  FOREIGN KEY (user_id) REFERENCES USERS (id)
    ON DELETE CASCADE,
  FOREIGN KEY (restaurant_id) REFERENCES restaurants (id)
    ON DELETE CASCADE
);
-- create unique index idx_eventlogs_startatdate
--   on votes (user_id, TRUNC(date_time, ));

-- CREATE UNIQUE INDEX votes_unique_user_datetime_idx
--   ON votes (user_id, date_time);